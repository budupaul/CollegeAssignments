( 0 - nothing )
( 1 - up )
( 2 - down )
( 3 - left )
( 4 - right )
( -1 - stop )

(START_DATA)
variable init
variable moves 6 cells
(END_DATA)

(START_WORDS)

(3 n ASSIGN == assign the value 3 to the variable n)
: ASSIGN !;

(n PUSH == push the value of variable n on top of the stack )
: PUSH @;

(n PUSHA == push the address of variable n on top of the stack )
: PUSHA;
: N 0;
: U 1;
: D 2;
: L 3;
: R 4;
: END -1;

(END_WORDS)

(START_CODE)
init PUSH
if
else
  1 init ASSIGN
  D moves 0 + ASSIGN
  R moves 1 + ASSIGN
  U moves 2 + ASSIGN
  R moves 3 + ASSIGN
  D moves 4 + ASSIGN
  END moves 5 + ASSIGN
  moves 5 + PUSH
  moves 4 + PUSH
  moves 3 + PUSH
  moves 2 + PUSH
  moves 1 + PUSH
  moves 0 + PUSH
then
quit
(END_CODE)
